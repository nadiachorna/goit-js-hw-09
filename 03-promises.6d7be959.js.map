{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,WAAYC,SAASC,cAAc,kBACnCC,UAAWF,SAASC,cAAc,iBAClCE,YAAaH,SAASC,cAAc,mBACpCG,UAAWJ,SAASC,cAAc,yBAClCI,KAAML,SAASC,cAAc,SA0B/B,SAASK,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEpC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,uBAAwCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDM,EAAK,sBAAqCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,SAEnDA,MAjCTV,EAAKO,KAAKY,iBAAiB,UAAU,SAACC,GACpCA,EAAEC,iBAEF,IAAIC,EAAYC,SAASvB,EAAKC,WAAWuB,OACnCC,EAAaF,SAASvB,EAAKK,YAAYmB,OACvCE,EAAWH,SAASvB,EAAKI,UAAUoB,OAEzC,GAAIF,GAAa,GAAKG,GAAc,GAAKC,GAAY,EACnD,IAAI,IAAIjB,EAAW,EAAGA,GAAYgB,EAAYhB,GAAY,EACxDD,EAAeC,EAAUa,GACtBK,MAAK,SAAAH,GACJI,EAAA9B,GAAS+B,OAAOC,QAAQN,MAEzBO,OAAM,SAAAC,GACLJ,EAAA9B,GAAS+B,OAAOI,QAAQD,MAE5BV,GAAYI,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  inputDelay: document.querySelector('[name=\"delay\"]'),\n  inputStep: document.querySelector('[name=\"step\"]'),\n  inputAmount: document.querySelector('[name=\"amount\"]'),\n  btnSubmit: document.querySelector('button[type=\"submit\"]'),\n  form: document.querySelector('form')\n}\n\nrefs.form.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  let delayUser = parseInt(refs.inputDelay.value);\n  const amountUser = parseInt(refs.inputAmount.value);\n  const stepUser = parseInt(refs.inputStep.value);\n\n  if (delayUser >= 0 && amountUser >= 0 && stepUser >= 0) {\n    for(let position = 1; position <= amountUser; position += 1) {\n      createPromise (position, delayUser)\n        .then(value => {\n          Notiflix.Notify.success(value);\n        })\n        .catch(error => {\n          Notiflix.Notify.warning(error);\n        });\n      delayUser +=stepUser;\n  }\n    }\n    \n\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);          \n        } else {\n          reject(`❌ Rejected promise ${position} in ${delay}ms`);\n        }\n      }, delay);\n    });\n}\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","inputDelay","document","querySelector","inputStep","inputAmount","btnSubmit","form","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","addEventListener","e","preventDefault","delayUser","parseInt","value","amountUser","stepUser","then","$parcel$interopDefault","Notify","success","catch","error","warning"],"version":3,"file":"03-promises.6d7be959.js.map"}